@model Models.EF.Book

@{
    ViewBag.Title = "Create";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}


@section header{
    Thêm sách
}

@section rowtitle{
    Nhập thông tin sách
}


@section jsFooter{
    <script>
        $('#btnChooseImage').on('click', function (e) {
            e.preventDefault();
            var finder = new CKFinder();
            finder.selectActionFunction = function (url) {
                $('#txtChooseImage').val(url);
            };
            finder.popup();
        });
    </script>
}


<div class="col-lg-6">
    @using (Html.BeginForm("Create", "Book", FormMethod.Post))
    {
        @Html.AntiForgeryToken()

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-4" })

            @Html.TextBoxFor(model => model.Name, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Code, htmlAttributes: new { @class = "control-label col-md-4" })

            @Html.TextBoxFor(model => model.Code, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Code, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CoverPhoto, htmlAttributes: new { @class = "control-label col-md-4" })
            @Html.TextBoxFor(model => model.CoverPhoto, new { @class = "form-control", id = "txtChooseImage" })
            <br />
            <a id="btnChooseImage" href="#" class="btn btn-success">Chọn ảnh</a>
            @Html.ValidationMessageFor(model => model.CoverPhoto, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-4" })

            @Html.TextBoxFor(model => model.Price, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Quantity, htmlAttributes: new { @class = "control-label col-md-4" })

            @Html.TextBoxFor(model => model.Quantity, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BookAuthor, htmlAttributes: new { @class = "control-label col-md-4" })
            @Html.DropDownListFor(model => model.BookAuthor, null, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.BookAuthor, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BookCategory, htmlAttributes: new { @class = "control-label col-md-4" })
            @Html.DropDownListFor(model => model.BookCategory, null, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.BookCategory, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BookPublisher, htmlAttributes: new { @class = "control-label col-md-4" })
            @Html.DropDownListFor(model => model.BookPublisher, null, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.BookPublisher, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-4" })

            @Html.TextAreaFor(model => model.Description, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Detail, htmlAttributes: new { @class = "control-label col-md-4" })

            @Html.TextAreaFor(model => model.Detail, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Detail, "", new { @class = "text-danger" })
        </div>



        <div class="form-group">
            @Html.LabelFor(model => model.TopHot, htmlAttributes: new { @class = "control-label col-md-4" })

            @Html.CheckBoxFor(model => model.TopHot, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.TopHot, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.New, htmlAttributes: new { @class = "control-label col-md-4" })

            @Html.CheckBoxFor(model => model.New, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.New, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-4" })

            @Html.CheckBoxFor(model => model.Status, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
        </div>
        <br />
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <a href="/Admin/Book/Index" class="btn btn-default">Hủy bỏ</a>
                <input type="submit" value="Thêm mới" class="btn btn-primary" />
            </div>
        </div>

    }
</div>